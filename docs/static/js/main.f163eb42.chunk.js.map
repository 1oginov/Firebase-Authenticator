{"version":3,"sources":["components/FirebaseAppForm/FirebaseAppForm.js","components/FirebaseAppForm/index.js","components/FirebaseAppForm/FirebaseAppForm.enhancer.js","views/CreateFirebaseApp/CreateFirebaseApp.js","actions/index.js","actions/types.js","enhancers/withNavigationHandlers.js","views/CreateFirebaseApp/CreateFirebaseApp.enhancer.js","views/CreateFirebaseApp/index.js","routes.js","components/Authenticated/Authenticated.js","components/Authenticated/index.js","components/Authenticated/Authenticated.enhancer.js","lib/location.js","components/FirebaseAuth/FirebaseAuth.js","components/FirebaseAuth/index.js","components/FirebaseAuth/FirebaseAuth.enhancer.js","views/FirebaseApp/FirebaseApp.js","views/FirebaseApp/FirebaseApp.enhancer.js","views/FirebaseApp/index.js","lib/firebaseApp.js","constants.js","components/FirebaseAppsListItem/index.js","components/FirebaseAppsListItem/FirebaseAppsListItem.js","components/FirebaseAppsList/index.js","components/FirebaseAppsList/FirebaseAppsList.js","views/Home/Home.js","views/Home/Home.enhancer.js","views/Home/index.js","views/UpdateFirebaseApp/UpdateFirebaseApp.js","views/UpdateFirebaseApp/UpdateFirebaseApp.enhancer.js","views/UpdateFirebaseApp/index.js","containers/App/App.js","containers/App/App.enhancer.js","containers/App/index.js","reducer/index.js","serviceWorker.js","index.js","lib/createStore.js"],"names":["FirebaseAppForm","_ref","apiKey","authDomain","buttonTitle","databaseUrl","handleInputChange","handleSubmit","messagingSenderId","projectId","redirectRefreshTokenPlaceholder","redirectUrl","signInOptionEmail","signInOptionGithub","signInOptionGoogle","storageBucket","title","react","onSubmit","name","onChange","value","htmlFor","checked","id","type","enhance","compose","withStateHandlers","initial","config","databaseURL","redirect","refreshTokenPlaceholder","url","signInOptions","indexOf","event","_event$target","target","Object","defineProperty","withHandlers","_ref3","preventDefault","uuidv1","concat","toConsumableArray","CreateFirebaseApp","handleBackClick","onClick","components_FirebaseAppForm","navigate","route","params","dispatch","payload","createFirebaseApp","app","selectFirebaseApp","mapDispatchToProps","navigateCreator","withNavigationHandlers","handlersMapper","connect","handlers","keys","forEach","key","props","objectWithoutProperties","_value","createFirebaseAppCreator","selectFirebaseAppCreator","handleFirebaseAppNavigate","Authenticated","email","handleContinueClick","handleSignOutClick","pictureUrl","alt","src","appInstance","user","auth","currentUser","Error","refreshToken","replace","window","location","_ref2","signOut","withProps","displayName","photoURL","FirebaseAuth","uiConfig","callbacks","signInSuccessWithAuthResult","map","option","firebase","EmailAuthProvider","PROVIDER_ID","GithubAuthProvider","GoogleAuthProvider","FirebaseAuth_default","a","firebaseAuth","lifecycle","componentDidCatch","_console","console","error","apply","arguments","FirebaseApp","state","undefined","isAuthenticated","_this2","this","initializeApp","unregisterAuthObserver","onAuthStateChanged","setState","Boolean","log","delete","then","_this$state","components_FirebaseAuth","components_Authenticated","_this$props","handleDeleteClick","handleShareClick","handleUpdateClick","renderAuthComponent","JSON","stringify","React","deleteFirebaseApp","currentFirebaseApp","firebaseApps","prompt","URL","href","search","searchParams","append","toString","createShareLink","FirebaseAppsListItem","onSelect","FirebaseAppsList","apps","index","components_FirebaseAppsListItem","Home","handleCreateFirebaseAppClick","components_FirebaseAppsList","UpdateFirebaseApp","updateFirebaseApp","objectSpread","updatedApp","App","views_CreateFirebaseApp","views_FirebaseApp","views_UpdateFirebaseApp","views_Home","componentDidMount","sharedFirebaseApp","link","param","get","parse","parseShareLink","initialState","routeParams","persistedPaths","hostname","match","container","document","getElementById","store","reducer","middleware","thunk","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","persistState","createStore","length","action","_state$firebaseApps","ReactDom","render","es","containers_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uKAuJeA,EAjIS,SAAAC,GAAA,IACtBC,EADsBD,EACtBC,OAAQC,EADcF,EACdE,WAAYC,EADEH,EACFG,YAAaC,EADXJ,EACWI,YAAaC,EADxBL,EACwBK,kBAAmBC,EAD3CN,EAC2CM,aAAcC,EADzDP,EACyDO,kBAC/EC,EAFsBR,EAEtBQ,UAAWC,EAFWT,EAEXS,gCAAiCC,EAFtBV,EAEsBU,YAAaC,EAFnCX,EAEmCW,kBAAmBC,EAFtDZ,EAEsDY,mBAC5EC,EAHsBb,EAGtBa,mBAAoBC,EAHEd,EAGFc,cAAeC,EAHbf,EAGae,MAHb,OAKtBC,EAAA,sBAAMC,SAAUX,GAEdU,EAAA,iCAEEA,EAAA,yBACAA,EAAA,uBAAOE,KAAK,QAAQC,SAAUd,EAAmBe,MAAOL,KAG1DC,EAAA,8BAEEA,EAAA,6CAEAA,EAAA,mCAEEA,EAAA,yBACAA,EAAA,uBAAOE,KAAK,SAASC,SAAUd,EAAmBe,MAAOnB,KAG3De,EAAA,uCAEEA,EAAA,yBACAA,EAAA,uBAAOE,KAAK,aAAaC,SAAUd,EAAmBe,MAAOlB,KAG/Dc,EAAA,wCAEEA,EAAA,yBACAA,EAAA,uBAAOE,KAAK,cAAcC,SAAUd,EAAmBe,MAAOhB,KAGhEY,EAAA,+CAEEA,EAAA,yBACAA,EAAA,uBAAOE,KAAK,oBAAoBC,SAAUd,EAAmBe,MAAOb,KAGtES,EAAA,sCAEEA,EAAA,yBACAA,EAAA,uBAAOE,KAAK,YAAYC,SAAUd,EAAmBe,MAAOZ,KAG9DQ,EAAA,0CAEEA,EAAA,yBACAA,EAAA,uBAAOE,KAAK,gBAAgBC,SAAUd,EAAmBe,MAAON,MAKpEE,EAAA,8BAEEA,EAAA,wCAEAA,EAAA,+BAEEA,EAAA,yBACAA,EAAA,uBAAOE,KAAK,cAAcC,SAAUd,EAAmBe,MAAOV,KAGhEM,EAAA,qDAEEA,EAAA,yBACAA,EAAA,uBACEE,KAAK,kCACLC,SAAUd,EACVe,MAAOX,MAMbO,EAAA,8BAEEA,EAAA,+CAEAA,EAAA,yBACEA,EAAA,uBAAOK,QAAQ,qBACbL,EAAA,uBACEM,QAASX,EACTY,GAAG,oBACHL,KAAK,oBACLC,SAAUd,EACVmB,KAAK,aANT,UAYFR,EAAA,yBACEA,EAAA,uBAAOK,QAAQ,sBACbL,EAAA,uBACEM,QAASV,EACTW,GAAG,qBACHL,KAAK,qBACLC,SAAUd,EACVmB,KAAK,aANT,WAYFR,EAAA,yBACEA,EAAA,uBAAOK,QAAQ,sBACbL,EAAA,uBACEM,QAAST,EACTU,GAAG,qBACHL,KAAK,qBACLC,SAAUd,EACVmB,KAAK,aANT,YAcJR,EAAA,yBACEA,EAAA,wBAAQQ,KAAK,UAAUrB,8CC5IdsB,ECUkCC,YAC/CC,YACE,SAAA3B,GAAA,IAAG4B,EAAH5B,EAAG4B,QAAH,MAAkB,CAChB3B,OAAS2B,GAAWA,EAAQC,OAAO5B,QAAW,GAC9CC,WAAa0B,GAAWA,EAAQC,OAAO3B,YAAe,GACtDE,YAAcwB,GAAWA,EAAQC,OAAOC,aAAgB,GACxDvB,kBAAoBqB,GAAWA,EAAQC,OAAOtB,mBAAsB,GACpEC,UAAYoB,GAAWA,EAAQC,OAAOrB,WAAc,GACpDC,gCAAmCmB,GAAWA,EAAQG,SAASC,yBAC1D,iBACLtB,YAAckB,GAAWA,EAAQG,SAASE,KAAQ,GAClDtB,oBAAoBiB,GAAUA,EAAQM,cAAcC,QAAQ,UAAY,EACxEvB,qBAAqBgB,GAAUA,EAAQM,cAAcC,QAAQ,WAAa,EAC1EtB,qBAAqBe,GAAUA,EAAQM,cAAcC,QAAQ,WAAa,EAC1ErB,cAAgBc,GAAWA,EAAQC,OAAOf,eAAkB,GAC5DC,MAAQa,GAAWA,EAAQb,OAAU,KAEvC,CACEV,kBAAmB,kBAAM,SAAC+B,GAAU,IAAAC,EAK9BD,EAHFE,OACEhB,EAH8Be,EAG9Bf,QAASJ,EAHqBmB,EAGrBnB,KAAMM,EAHea,EAGfb,KAAMJ,EAHSiB,EAGTjB,MAIzB,OAAOmB,OAAAC,EAAA,EAAAD,CAAA,GAAGrB,EAAgB,aAATM,EAAsBF,EAAUF,OAIvDqB,YAAa,CAEXnC,aAAc,SAAAoC,GAAA,IACZzC,EADYyC,EACZzC,OAAQC,EADIwC,EACJxC,WAAYE,EADRsC,EACQtC,YAAaG,EADrBmC,EACqBnC,kBAAmBU,EADxCyB,EACwCzB,SAAUT,EADlDkC,EACkDlC,UAC9DC,EAFYiC,EAEZjC,gCAAiCC,EAFrBgC,EAEqBhC,YAAaC,EAFlC+B,EAEkC/B,kBAAmBC,EAFrD8B,EAEqD9B,mBACjEC,EAHY6B,EAGZ7B,mBAAoBC,EAHR4B,EAGQ5B,cAAeC,EAHvB2B,EAGuB3B,MAHvB,OAIR,SAACqB,GACLA,EAAMO,iBAEN1B,EAAS,CACPY,OAAQ,CACN5B,SACAC,aACA4B,YAAa1B,EACbG,oBACAC,YACAM,iBAEFS,GAAIqB,MACJb,SAAU,CACRC,wBAAyBvB,EACzBwB,IAAKvB,GAEPwB,cAAa,GAAAW,OAAAN,OAAAO,EAAA,EAAAP,CAEP5B,EAAoB,CAAC,SAAW,IAFzB4B,OAAAO,EAAA,EAAAP,CAGP3B,EAAqB,CAAC,UAAY,IAH3B2B,OAAAO,EAAA,EAAAP,CAIP1B,EAAqB,CAAC,UAAY,KAExCE,cDpEOU,CAAQ1B,GEqBRgD,EAdW,SAAA/C,GAAA,IAAGgD,EAAHhD,EAAGgD,gBAAiB/B,EAApBjB,EAAoBiB,SAApB,OACxBD,EAAA,cAACA,EAAA,SAAD,KAEEA,EAAA,+CAEAA,EAAA,yBACEA,EAAA,wBAAQiC,QAASD,EAAiBxB,KAAK,UAAvC,SAGFR,EAAA,cAACkC,EAAD,CAAiB/C,YAAY,SAASc,SAAUA,aCPvCkC,EAAW,SAACC,EAAeC,GAAhB,OAAoC,SAACC,GAC3DA,EAAS,CACPC,QAAS,CAAEF,SAAQD,SACnB5B,KCfgC,eDmBvBgC,EAAoB,SAACC,GAAD,OAAsB,SAACH,GACtDA,EAAS,CACPC,QAASE,EACTjC,KCpBwD,2BDyC/CkC,EAAoB,SAACnC,GAAD,OAAgB,SAAC+B,GAChDA,EAAS,CACPC,QAAShC,EACTC,KCxC0D,oCCGxDmC,EAAqB,CAAER,SAAUS,GAyBxBC,EAvBgB,SAACC,GAAD,OAAgDpC,YAC7EqC,YAAQ,KAAMJ,GACdlB,YAAa,WACX,IAAMuB,EAAW,GAgBjB,OAdAzB,OAAO0B,KAAKH,GAAgBI,QAAQ,SAACC,GACnCH,EAASG,GAAO,SAAAnE,GAAA,IAAGmD,EAAHnD,EAAGmD,SAAaiB,EAAhB7B,OAAA8B,EAAA,EAAA9B,CAAAvC,EAAA,qBAA4B,SAACoC,GAC3C,IAAMhB,EAAQ0C,EAAeK,GAE7B,GAAqB,oBAAV/C,EAAsB,KAAAkD,EACLlD,EAAMgD,EAAOhC,GAA/BiB,EADuBiB,EACvBjB,OAAQD,EADekB,EACflB,MAChBD,EAASC,EAAOC,OACX,CACL,IAAMD,EAAQU,EAAeK,GAC7BhB,EAASC,QAKRY,MCpBLL,EAAqB,CACzBH,kBAAmBe,EACnBb,kBAAmBc,GCTN/C,EDYcC,YAC3BmC,EAAuB,CACrBb,gBEfgB,OFgBhByB,0BEjBwB,iBFmB1BV,YAAQ,KAAMJ,GACdlB,YAAa,CAEXxB,SAAU,SAAAjB,GAAA,IAAGwD,EAAHxD,EAAGwD,kBAAmBiB,EAAtBzE,EAAsByE,0BAA2Bf,EAAjD1D,EAAiD0D,kBAAjD,OAAyE,SAACD,GAClFD,EAAkBC,GAClBC,EAAkBD,EAAIlC,IACtBkD,QCvBShD,CAAQsB,4DEkCR2B,EA3BO,SAAA1E,GAAA,IACpB2E,EADoB3E,EACpB2E,MAAOC,EADa5E,EACb4E,oBAAqBC,EADR7E,EACQ6E,mBAAoB3D,EAD5BlB,EAC4BkB,KAAM4D,EADlC9E,EACkC8E,WADlC,OAGpB9D,EAAA,cAACA,EAAA,SAAD,KAEEA,EAAA,yBACG,gBACDA,EAAA,4BAASE,GACR,IACDF,EAAA,wBAAK2D,IAGP3D,EAAA,yBACEA,EAAA,wBAAQiC,QAAS2B,EAAqBpD,KAAK,UAA3C,aAGFR,EAAA,yBACEA,EAAA,wBAAQiC,QAAS4B,EAAoBrD,KAAK,UAA1C,aAGFR,EAAA,yBACEA,EAAA,qBAAK+D,IAAI,OAAOC,IAAKF,OC5BZrD,ECSkCC,YAC/Ce,YAAa,CAEXmC,oBAAqB,SAAA5E,GAAA,IAAGyD,EAAHzD,EAAGyD,IAAKwB,EAARjF,EAAQiF,YAAR,OAA0B,WAC7C,IAAMC,EAAOD,EAAYE,OAAOC,YAEhC,IAAKF,EACH,MAAM,IAAIG,MAAM,mBAJiC,ICHhCpD,EDUXqD,EAAiBJ,EAAjBI,aCVWrD,EDYVwB,EAAI1B,SAASE,IAAIsD,QAAQ9B,EAAI1B,SAASC,wBAAyBsD,GCX5EE,OAAOC,SAAWxD,IDchB4C,mBAAoB,SAAAa,GAAA,IAAGT,EAAHS,EAAGT,YAAH,OAAqB,WACvCA,EAAYE,OAAOQ,cAIvBC,YAAU,SAAAlD,GAAqB,IACvBwC,EADuBxC,EAAlBuC,YACcE,OAAOC,YAEhC,IAAKF,EACH,MAAM,IAAIG,MAAM,mBAGlB,MAAO,CACLV,MAAOO,EAAKP,OAAS,GACrBzD,KAAMgE,EAAKW,aAAe,GAC1Bf,WAAYI,EAAKY,UAAY,MDvCpBrE,CAAQiD,oBG4BRqB,EAtBM,SAAA/F,GAA2C,IAAxCiF,EAAwCjF,EAAxCiF,YAChBe,EAAW,CACfC,UAAW,CACTC,4BAA6B,kBAAM,IAErChE,cAL4DlC,EAA3BkC,cAKJiE,IAAI,SAACC,GAChC,OAAQA,GACN,IAAK,QACH,OAAOC,IAASlB,KAAKmB,kBAAkBC,YACzC,IAAK,SACH,OAAOF,IAASlB,KAAKqB,mBAAmBD,YAC1C,IAAK,SACH,OAAOF,IAASlB,KAAKsB,mBAAmBF,YAC1C,QACE,WAKR,OAAOvF,EAAA,cAAC0F,EAAAC,EAAD,CAAYC,aAAc3B,EAAYE,OAAQa,SAAUA,KCzBlDvE,ECDcoF,YAAU,CAErCC,kBAFqC,WAEV,IAAAC,GACzBA,EAAAC,SAAQC,MAARC,MAAAH,EAAAI,aDFW1F,CAAQsE,GEiBFqB,6MACnBC,MAAQ,CACNpC,iBAAaqC,EACbC,qBAAiBD,sFAGC,IAAAE,EAAAC,KACVhE,EAAQgE,KAAKrD,MAAbX,IACFwB,EAAcoB,IAASqB,cAAcjE,EAAI5B,QAE/C,IACE4F,KAAKE,uBAAyB1C,EAAYE,OAAOyC,mBAAmB,SAAC1C,GACnEsC,EAAKK,SAAS,CAAEN,gBAAiBO,QAAQ5C,OAE3C,MAAO+B,GACPD,QAAQC,MAAMA,GAGhBD,QAAQe,IAAI,2BAA4BtE,EAAI5B,QAE5C4F,KAAKI,SAAS,CAAE5C,+DAGK,IACbxB,EAAQgE,KAAKrD,MAAbX,IACAwB,EAAgBwC,KAAKJ,MAArBpC,YAEJwC,KAAKE,wBACPF,KAAKE,yBAGH1C,GACFA,EAAY+C,SACTC,KAAK,kBAAMjB,QAAQe,IAAI,uBAAwBtE,EAAI5B,wDAMpC,IACZ4B,EAAQgE,KAAKrD,MAAbX,IADYyE,EAEqBT,KAAKJ,MAAtCpC,EAFYiD,EAEZjD,YAAasC,EAFDW,EAECX,gBAErB,OAAKtC,GAImB,IAApBsC,EACKvG,EAAA,cAACmH,EAAD,CAAclD,YAAaA,EAAa/C,cAAeuB,EAAIvB,iBAG5C,IAApBqF,EACKvG,EAAA,cAACoH,EAAD,CAAe3E,IAAKA,EAAKwB,YAAaA,IAGxCjE,EAAA,4DAXEA,EAAA,0FAcF,IAAAqH,EAGHZ,KAAKrD,MADPX,EAFK4E,EAEL5E,IAAKT,EAFAqF,EAEArF,gBAAiBsF,EAFjBD,EAEiBC,kBAAmBC,EAFpCF,EAEoCE,iBAAkBC,EAFtDH,EAEsDG,kBAG7D,OACExH,EAAA,cAACA,EAAA,SAAD,KAEEA,EAAA,wBAAKyC,EAAI1C,OAETC,EAAA,yBACEA,EAAA,wBAAQiC,QAASD,EAAiBxB,KAAK,UAAvC,QACAR,EAAA,wBAAQiC,QAASuF,EAAmBhH,KAAK,UAAzC,UACAR,EAAA,wBAAQiC,QAASsF,EAAkB/G,KAAK,UAAxC,UAGDiG,KAAKgB,sBAENzH,EAAA,yBACEA,EAAA,yBAAM0H,KAAKC,UAAUlF,EAAK,KAAM,KAGlCzC,EAAA,yBACEA,EAAA,wBAAQiC,QAASqF,EAAmB9G,KAAK,UAAzC,mBAjF+BoH,aCRnCjF,EAAqB,CAAEkF,kBdwBI,SAACtH,GAAD,OAAgB,SAAC+B,GAChDA,EAAS,CACPC,QAAShC,EACTC,KCnCwD,4BcD7CC,EDWcC,YAC3BmC,EAAuB,CACrBb,gBTdgB,OSehBwF,kBTd+B,wBSgBjCzE,YAXsB,SAAA/D,GAAA,IAAG8I,EAAH9I,EAAG8I,mBAAH,MAA2C,CACjErF,IADsBzD,EAAuB+I,aAC3BD,KAUOnF,GACzBlB,YAAa,CAEX6F,kBAAmB,SAAA5C,GAAA,IAAGjC,EAAHiC,EAAGjC,IAAKoF,EAARnD,EAAQmD,kBAAmB7F,EAA3B0C,EAA2B1C,gBAA3B,OAAiD,WAClEA,IACA6F,EAAkBpF,EAAIlC,MAGxBgH,iBAAkB,SAAA7F,GAAA,IAAGe,EAAHf,EAAGe,IAAH,OAAa,WAC7BuF,OAAO,mBERkB,SAACvF,GAC9B,IAAMxB,EAAM,IAAIgH,IAAIzD,OAAOC,SAASyD,MAIpC,OAHAjH,EAAIkH,OAAS,GACblH,EAAImH,aAAaC,OCtB+B,eDsBcX,KAAKC,UAAUlF,IAEtExB,EAAIqH,WFGoBC,CAAgB9F,QCzBlChC,CAAQ2F,GGDRoC,ECOc,SAAAxJ,GAAA,IAAGyD,EAAHzD,EAAGyD,IAAKgG,EAARzJ,EAAQyJ,SAAR,OAC3BzI,EAAA,yBACGyC,EAAI1C,MACLC,EAAA,wBAAQiC,QAAS,kBAAMwG,EAAShG,EAAIlC,KAAKC,KAAK,UAA9C,YCVWkI,ECQU,SAAA1J,GAAA,IAAG2J,EAAH3J,EAAG2J,KAAMF,EAATzJ,EAASyJ,SAAT,OACvBzI,EAAA,yBACG2I,EAAKxD,IAAI,SAAC1C,EAAKmG,GAAN,OACR5I,EAAA,cAAC6I,EAAD,CACEpG,IAAKA,EACLU,IAAKyF,EACLH,SAAUA,QCSHK,EAdF,SAAA9J,GAAA,IAAG2J,EAAH3J,EAAG2J,KAAMI,EAAT/J,EAAS+J,6BAA8BN,EAAvCzJ,EAAuCyJ,SAAvC,OACXzI,EAAA,cAACA,EAAA,SAAD,KAEEA,EAAA,gCAEAA,EAAA,yBACEA,EAAA,wBAAQiC,QAAS8G,EAA8BvI,KAAK,UAApD,wBAGFR,EAAA,cAACgJ,EAAD,CAAkBL,KAAMA,EAAMF,SAAUA,MCTtC9F,EAAqB,CAAED,kBAAmBc,GCRjC/C,EDUcC,YAC3BmC,EAAuB,CACrBkG,6BlBf+B,sBkBgB/BtF,0BlBfwB,iBkBiB1BV,YAXsB,SAAA/D,GAAA,IAAG+I,EAAH/I,EAAG+I,aAAH,MAAuB,CAC7CY,KAAMpH,OAAO0B,KAAK8E,GAAc5C,IAAI,SAAAhC,GAAG,OAAI4E,EAAa5E,OAU/BR,GACzBlB,YAAa,CAEXgH,SAAU,SAAA/D,GAAA,IAAGjB,EAAHiB,EAAGjB,0BAA2Bf,EAA9BgC,EAA8BhC,kBAA9B,OAAsD,SAACnC,GAC/DmC,EAAkBnC,GAClBkD,QCpBShD,CAAQqI,GCsBRG,EAdW,SAAAjK,GAAA,IAAGyD,EAAHzD,EAAGyD,IAAKT,EAARhD,EAAQgD,gBAAiB/B,EAAzBjB,EAAyBiB,SAAzB,OACxBD,EAAA,cAACA,EAAA,SAAD,KAEEA,EAAA,+CAEAA,EAAA,yBACEA,EAAA,wBAAQiC,QAASD,EAAiBxB,KAAK,UAAvC,SAGFR,EAAA,cAACkC,EAAD,CAAiB/C,YAAY,SAASyB,QAAS6B,EAAKxC,SAAUA,MCT5D0C,EAAqB,CAAEuG,kB1BeI,SAAC3I,EAAYkC,GAAb,OAAkC,SAACH,GAClEA,EAAS,CACPC,QAAQhB,OAAA4H,EAAA,EAAA5H,CAAA,GACHkB,EADE,CAELlC,OAEFC,KC7BwD,4B0BA7CC,EDUcC,YAC3BmC,EAAuB,CACrBb,gBrBdwB,iBqBgB1Be,YAVsB,SAAA/D,GAAA,IAAG8I,EAAH9I,EAAG8I,mBAAH,MAA2C,CACjErF,IADsBzD,EAAuB+I,aAC3BD,KASOnF,GACzBlB,YAAa,CAEXxB,SAAU,SAAAyE,GAAA,IAAGjC,EAAHiC,EAAGjC,IAAKT,EAAR0C,EAAQ1C,gBAAiBkH,EAAzBxE,EAAyBwE,kBAAzB,OAAiD,SAACE,GAC1DF,EAAkBzG,EAAIlC,GAAI6I,GAC1BpH,QCnBSvB,CAAQwI,GCyBRI,EAhBH,SAAArK,GACV,OADgCA,EAAnBoD,OAEX,IvBd+B,sBuBe7B,OAAOpC,EAAA,cAACsJ,EAAD,MAET,IvBhBwB,euBiBtB,OAAOtJ,EAAA,cAACuJ,EAAD,MAET,IvBjB+B,sBuBkB7B,OAAOvJ,EAAA,cAACwJ,EAAD,MAET,QACE,OAAOxJ,EAAA,cAACyJ,EAAD,QCTP9G,EAAqB,CACzBH,kBAAmBe,EACnBpB,SAAUS,EACVF,kBAAmBc,GCfN/C,EDkBcC,YAC3BqC,YAXsB,SAAA/D,GAAA,MAAkD,CACxE8I,mBADsB9I,EAAG8I,mBACLC,aADE/I,EAAuB+I,aACX3F,MADZpD,EAAqCoD,QAWlCO,GACzBkD,YAAU,CAER6D,kBAFQ,WAEY,IAAArC,EAGdZ,KAAKrD,MADPZ,EAFgB6E,EAEhB7E,kBAAmBsF,EAFHT,EAEGS,mBAAoBC,EAFvBV,EAEuBU,aAAc5F,EAFrCkF,EAEqClF,SAAUO,EAF/C2E,EAE+C3E,kBAG3DiH,EbFkB,SAACC,GAC7B,IACMC,EADM,IAAI5B,IAAI2B,GACFxB,aAAa0B,IC7BiB,gBD+BhD,GAAID,EACF,IACE,OAAOnC,KAAKqC,MAAMF,GAClB,MAAO5D,GACPD,QAAQC,MAAMA,IaNY+D,CAAexF,OAAOC,SAASyD,MAErDyB,IAAsB5B,EAAa4B,EAAkBpJ,KACvDiC,EAAkBmH,GAClBjH,EAAkBiH,EAAkBpJ,IACpC4B,ExBlCoB,iBwBmCX2F,GAAsBC,EAAaD,IAC5C3F,ExBpCoB,mByBEb1B,CAAQ4I,qCCSjBY,GAAe,CACnBnC,mBAAoB,GACpBC,aAAc,GACd3F,M1BbkB,O0BclB8H,YAAa,IAGFC,GAAiB,CAAC,qBAAsB,gBCPjCrD,QACW,cAA7BtC,OAAOC,SAAS2F,UAEgB,UAA7B5F,OAAOC,SAAS2F,UAEhB5F,OAAOC,SAAS2F,SAASC,MAAM,2DCRpC,IAAMC,GAAYC,SAASC,eAAe,aACpCC,GCCS,SAACC,GACd,IAAMC,EAAa,CACjBC,MAQIC,GALsC,kBAAXrG,QAC9BA,OAAOsG,qCACNtG,OAAOsG,qCACPpK,KAGFqK,IAAe7E,WAAf,EAAmByE,GACnBK,IAAab,KAGf,OAAOc,YAAYP,EAASG,GDhBhBI,CFWC,WAAwD,IAAvD5E,EAAuDF,UAAA+E,OAAA,QAAA5E,IAAAH,UAAA,GAAAA,UAAA,GAAxC8D,GAAckB,EAA0BhF,UAAA+E,OAAA,EAAA/E,UAAA,QAAAG,EACrE,OAAQ6E,EAAO3K,MACb,I9BvBgC,W8BwB9B,OAAOe,OAAA4H,EAAA,EAAA5H,CAAA,GACF8E,EADL,CAEEjE,MAAO+I,EAAO5I,QAAQH,MACtB8H,YAAaiB,EAAO5I,QAAQF,OAAS8I,EAAO5I,QAAQF,OAAS,KAGjE,I9B5BwD,uB8B6BxD,I9B5BwD,uB8B6BtD,OAAOd,OAAA4H,EAAA,EAAA5H,CAAA,GACF8E,EADL,CAEE0B,aAAaxG,OAAA4H,EAAA,EAAA5H,CAAA,GACR8E,EAAM0B,aADCxG,OAAAC,EAAA,EAAAD,CAAA,GAET4J,EAAO5I,QAAQhC,GAAK4K,EAAO5I,YAIlC,I9BpCwD,uB8BoC3B,IAAA6I,EAC4B/E,EAAM0B,aAAvBA,GADXqD,EAClBD,EAAO5I,SADWhB,OAAA8B,EAAA,EAAA9B,CAAA6J,EAAA,CAClBD,EAAO5I,WAEhB,OAAOhB,OAAA4H,EAAA,EAAA5H,CAAA,GACF8E,EADL,CAEEyB,mBAAqBqD,EAAO5I,UAAY8D,EAAMyB,mBAC1C,GAAKzB,EAAMyB,mBACfC,iBAIJ,I9B7C0D,wB8B8CxD,OAAOxG,OAAA4H,EAAA,EAAA5H,CAAA,GACF8E,EADL,CAEEyB,mBAAoBqD,EAAO5I,UAG/B,QACE,OAAO8D,KE9Cb,IAAKiE,GACH,MAAM,IAAIjG,MAAM,wBAGlBgH,IAASC,OACPtL,EAAA,cAACuL,EAAA,EAAD,CAAUd,MAAOA,IACfzK,EAAA,cAACwL,EAAD,OAEFlB,IDuGI,kBAAmBmB,WACrBA,UAAUC,cAAcC,MAAM1E,KAAK,SAAC2E,GAClCA,EAAaC","file":"static/js/main.f163eb42.chunk.js","sourcesContent":["// @flow\n\nimport * as React from 'react';\n\ntype Props = {\n  apiKey: string,\n  authDomain: string,\n  buttonTitle: string,\n  databaseUrl: string,\n  handleInputChange: () => void,\n  handleSubmit: () => void,\n  messagingSenderId: string,\n  projectId: string,\n  redirectRefreshTokenPlaceholder: string,\n  redirectUrl: string,\n  signInOptionEmail: boolean,\n  signInOptionGithub: boolean,\n  signInOptionGoogle: boolean,\n  storageBucket: string,\n  title: string,\n};\n\nconst FirebaseAppForm = ({\n  apiKey, authDomain, buttonTitle, databaseUrl, handleInputChange, handleSubmit, messagingSenderId,\n  projectId, redirectRefreshTokenPlaceholder, redirectUrl, signInOptionEmail, signInOptionGithub,\n  signInOptionGoogle, storageBucket, title,\n}: Props) => (\n  <form onSubmit={handleSubmit}>\n\n    <div>\n      Title\n      <br />\n      <input name=\"title\" onChange={handleInputChange} value={title} />\n    </div>\n\n    <fieldset>\n\n      <legend>Configuration</legend>\n\n      <div>\n        API key\n        <br />\n        <input name=\"apiKey\" onChange={handleInputChange} value={apiKey} />\n      </div>\n\n      <div>\n        Auth domain\n        <br />\n        <input name=\"authDomain\" onChange={handleInputChange} value={authDomain} />\n      </div>\n\n      <div>\n        Database URL\n        <br />\n        <input name=\"databaseUrl\" onChange={handleInputChange} value={databaseUrl} />\n      </div>\n\n      <div>\n        Messaging sender ID\n        <br />\n        <input name=\"messagingSenderId\" onChange={handleInputChange} value={messagingSenderId} />\n      </div>\n\n      <div>\n        Project ID\n        <br />\n        <input name=\"projectId\" onChange={handleInputChange} value={projectId} />\n      </div>\n\n      <div>\n        Storage bucket\n        <br />\n        <input name=\"storageBucket\" onChange={handleInputChange} value={storageBucket} />\n      </div>\n\n    </fieldset>\n\n    <fieldset>\n\n      <legend>Redirect</legend>\n\n      <div>\n        URL\n        <br />\n        <input name=\"redirectUrl\" onChange={handleInputChange} value={redirectUrl} />\n      </div>\n\n      <div>\n        Refresh token placeholder\n        <br />\n        <input\n          name=\"redirectRefreshTokenPlaceholder\"\n          onChange={handleInputChange}\n          value={redirectRefreshTokenPlaceholder}\n        />\n      </div>\n\n    </fieldset>\n\n    <fieldset>\n\n      <legend>Sign in options</legend>\n\n      <div>\n        <label htmlFor=\"signInOptionEmail\">\n          <input\n            checked={signInOptionEmail}\n            id=\"signInOptionEmail\"\n            name=\"signInOptionEmail\"\n            onChange={handleInputChange}\n            type=\"checkbox\"\n          />\n          Email\n        </label>\n      </div>\n\n      <div>\n        <label htmlFor=\"signInOptionGithub\">\n          <input\n            checked={signInOptionGithub}\n            id=\"signInOptionGithub\"\n            name=\"signInOptionGithub\"\n            onChange={handleInputChange}\n            type=\"checkbox\"\n          />\n          GitHub\n        </label>\n      </div>\n\n      <div>\n        <label htmlFor=\"signInOptionGoogle\">\n          <input\n            checked={signInOptionGoogle}\n            id=\"signInOptionGoogle\"\n            name=\"signInOptionGoogle\"\n            onChange={handleInputChange}\n            type=\"checkbox\"\n          />\n          Google\n        </label>\n      </div>\n\n    </fieldset>\n\n    <div>\n      <button type=\"submit\">{buttonTitle}</button>\n    </div>\n\n  </form>\n);\n\nexport default FirebaseAppForm;\n","// @flow\n\nimport FirebaseAppForm from './FirebaseAppForm';\nimport enhance from './FirebaseAppForm.enhancer';\n\nexport default enhance(FirebaseAppForm);\n","// @flow\n\nimport {\n  compose, withHandlers, withStateHandlers, type HOC,\n} from 'recompose';\nimport uuidv1 from 'uuid/v1';\n\nimport type { FirebaseApp } from '../../lib/firebaseApp';\n\ntype EnhancedComponentProps = {\n  buttonTitle: string,\n  initial?: FirebaseApp,\n  onSubmit: FirebaseApp => void,\n};\n\nconst enhancer: HOC<*, EnhancedComponentProps> = compose(\n  withStateHandlers(\n    ({ initial }) => ({\n      apiKey: (initial && initial.config.apiKey) || '',\n      authDomain: (initial && initial.config.authDomain) || '',\n      databaseUrl: (initial && initial.config.databaseURL) || '',\n      messagingSenderId: (initial && initial.config.messagingSenderId) || '',\n      projectId: (initial && initial.config.projectId) || '',\n      redirectRefreshTokenPlaceholder: ((initial && initial.redirect.refreshTokenPlaceholder)\n        || '%refreshToken%'),\n      redirectUrl: (initial && initial.redirect.url) || '',\n      signInOptionEmail: (initial ? initial.signInOptions.indexOf('email') >= 0 : false),\n      signInOptionGithub: (initial ? initial.signInOptions.indexOf('github') >= 0 : false),\n      signInOptionGoogle: (initial ? initial.signInOptions.indexOf('google') >= 0 : false),\n      storageBucket: (initial && initial.config.storageBucket) || '',\n      title: (initial && initial.title) || '',\n    }),\n    {\n      handleInputChange: () => (event) => {\n        const {\n          target: {\n            checked, name, type, value,\n          },\n        } = event;\n\n        return { [name]: type === 'checkbox' ? checked : value };\n      },\n    },\n  ),\n  withHandlers({\n\n    handleSubmit: ({\n      apiKey, authDomain, databaseUrl, messagingSenderId, onSubmit, projectId,\n      redirectRefreshTokenPlaceholder, redirectUrl, signInOptionEmail, signInOptionGithub,\n      signInOptionGoogle, storageBucket, title,\n    }) => (event) => {\n      event.preventDefault();\n\n      onSubmit({\n        config: {\n          apiKey,\n          authDomain,\n          databaseURL: databaseUrl,\n          messagingSenderId,\n          projectId,\n          storageBucket,\n        },\n        id: uuidv1(),\n        redirect: {\n          refreshTokenPlaceholder: redirectRefreshTokenPlaceholder,\n          url: redirectUrl,\n        },\n        signInOptions: [\n          // Such shorthand used to avoid Flow errors.\n          ...(signInOptionEmail ? ['email'] : []),\n          ...(signInOptionGithub ? ['github'] : []),\n          ...(signInOptionGoogle ? ['google'] : []),\n        ],\n        title,\n      });\n    },\n\n  }),\n);\n\nexport default enhancer;\n","// @flow\n\nimport * as React from 'react';\n\nimport FirebaseAppForm from '../../components/FirebaseAppForm';\nimport type { FirebaseApp } from '../../lib/firebaseApp';\n\ntype Props = {\n  handleBackClick: () => void,\n  onSubmit: FirebaseApp => void,\n};\n\nconst CreateFirebaseApp = ({ handleBackClick, onSubmit }: Props) => (\n  <React.Fragment>\n\n    <h1>Create Firebase app</h1>\n\n    <div>\n      <button onClick={handleBackClick} type=\"button\">Back</button>\n    </div>\n\n    <FirebaseAppForm buttonTitle=\"Create\" onSubmit={onSubmit} />\n\n  </React.Fragment>\n);\n\nexport default CreateFirebaseApp;\n","// @flow\n\nimport type { Dispatch } from 'redux';\n\nimport type { FirebaseApp } from '../lib/firebaseApp';\nimport * as T from './types';\n\nexport type Action =\n  | { type: typeof T.NAVIGATE, payload: { route: string, params: ?Object } }\n  | { type: typeof T.FIREBASE_APP_CREATED, payload: FirebaseApp }\n  | { type: typeof T.FIREBASE_APP_UPDATED, payload: FirebaseApp }\n  | { type: typeof T.FIREBASE_APP_DELETED, payload: string }\n  | { type: typeof T.FIREBASE_APP_SELECTED, payload: string };\n\nexport const navigate = (route: string, params?: Object) => (dispatch: Dispatch<Action>) => {\n  dispatch({\n    payload: { params, route },\n    type: T.NAVIGATE,\n  });\n};\n\nexport const createFirebaseApp = (app: FirebaseApp) => (dispatch: Dispatch<Action>) => {\n  dispatch({\n    payload: app,\n    type: T.FIREBASE_APP_CREATED,\n  });\n};\n\nexport const updateFirebaseApp = (id: string, app: FirebaseApp) => (dispatch: Dispatch<Action>) => {\n  dispatch({\n    payload: {\n      ...app,\n      id,\n    },\n    type: T.FIREBASE_APP_UPDATED,\n  });\n};\n\nexport const deleteFirebaseApp = (id: string) => (dispatch: Dispatch<Action>) => {\n  dispatch({\n    payload: id,\n    type: T.FIREBASE_APP_DELETED,\n  });\n};\n\nexport const selectFirebaseApp = (id: string) => (dispatch: Dispatch<Action>) => {\n  dispatch({\n    payload: id,\n    type: T.FIREBASE_APP_SELECTED,\n  });\n};\n","// @flow\n\nexport const NAVIGATE: 'NAVIGATE' = 'NAVIGATE';\n\nexport const FIREBASE_APP_CREATED: 'FIREBASE_APP_CREATED' = 'FIREBASE_APP_CREATED';\nexport const FIREBASE_APP_UPDATED: 'FIREBASE_APP_UPDATED' = 'FIREBASE_APP_UPDATED';\nexport const FIREBASE_APP_DELETED: 'FIREBASE_APP_DELETED' = 'FIREBASE_APP_DELETED';\n\nexport const FIREBASE_APP_SELECTED: 'FIREBASE_APP_SELECTED' = 'FIREBASE_APP_SELECTED';\n","// @flow\n\nimport { connect } from 'react-redux';\nimport { compose, withHandlers, type HOC } from 'recompose';\n\nimport { navigate as navigateCreator } from '../actions';\n\ntype HandlersMapper = {\n  [string]: string | (Object, Object) => { route: string, params: Object },\n};\n\nconst mapDispatchToProps = { navigate: navigateCreator };\n\nconst withNavigationHandlers = (handlersMapper: HandlersMapper): HOC<*, {}> => compose(\n  connect(null, mapDispatchToProps),\n  withHandlers(() => {\n    const handlers = {};\n\n    Object.keys(handlersMapper).forEach((key) => {\n      handlers[key] = ({ navigate, ...props }) => (event) => {\n        const value = handlersMapper[key];\n\n        if (typeof value === 'function') {\n          const { params, route } = value(props, event);\n          navigate(route, params);\n        } else {\n          const route = handlersMapper[key];\n          navigate(route);\n        }\n      };\n    });\n\n    return handlers;\n  }),\n);\n\nexport default withNavigationHandlers;\n","// @flow\n\nimport { connect } from 'react-redux';\nimport { compose, withHandlers, type HOC } from 'recompose';\n\nimport {\n  createFirebaseApp as createFirebaseAppCreator,\n  selectFirebaseApp as selectFirebaseAppCreator,\n} from '../../actions';\nimport withNavigationHandlers from '../../enhancers/withNavigationHandlers';\nimport * as R from '../../routes';\n\nconst mapDispatchToProps = {\n  createFirebaseApp: createFirebaseAppCreator,\n  selectFirebaseApp: selectFirebaseAppCreator,\n};\n\nconst enhancer: HOC<*, {}> = compose(\n  withNavigationHandlers({\n    handleBackClick: R.HOME,\n    handleFirebaseAppNavigate: R.FIREBASE_APP,\n  }),\n  connect(null, mapDispatchToProps),\n  withHandlers({\n\n    onSubmit: ({ createFirebaseApp, handleFirebaseAppNavigate, selectFirebaseApp }) => (app) => {\n      createFirebaseApp(app);\n      selectFirebaseApp(app.id);\n      handleFirebaseAppNavigate();\n    },\n\n  }),\n);\n\nexport default enhancer;\n","// @flow\n\nimport CreateFirebaseApp from './CreateFirebaseApp';\nimport enhance from './CreateFirebaseApp.enhancer';\n\nexport default enhance(CreateFirebaseApp);\n","// @flow\n\nexport const CREATE_FIREBASE_APP = 'CREATE_FIREBASE_APP';\nexport const FIREBASE_APP = 'FIREBASE_APP';\nexport const HOME = 'HOME';\nexport const UPDATE_FIREBASE_APP = 'UPDATE_FIREBASE_APP';\n","// @flow\n\nimport * as React from 'react';\n\ntype Props = {\n  email: string,\n  handleContinueClick: () => void,\n  handleSignOutClick: () => void,\n  name: string,\n  pictureUrl: string,\n};\n\nconst Authenticated = ({\n  email, handleContinueClick, handleSignOutClick, name, pictureUrl,\n}: Props) => (\n  <React.Fragment>\n\n    <div>\n      {'Signed in as '}\n      <strong>{name}</strong>\n      {' '}\n      <em>{email}</em>\n    </div>\n\n    <div>\n      <button onClick={handleContinueClick} type=\"button\">Continue</button>\n    </div>\n\n    <div>\n      <button onClick={handleSignOutClick} type=\"button\">Sign out</button>\n    </div>\n\n    <div>\n      <img alt=\"User\" src={pictureUrl} />\n    </div>\n\n  </React.Fragment>\n);\n\nexport default Authenticated;\n","// @flow\n\nimport Authenticated from './Authenticated';\nimport enhance from './Authenticated.enhancer';\n\nexport default enhance(Authenticated);\n","// @flow\n\nimport {\n  compose, withHandlers, withProps, type HOC,\n} from 'recompose';\n\nimport type { FirebaseApp } from '../../lib/firebaseApp';\nimport { redirect } from '../../lib/location';\n\ntype EnhancedComponentProps = {\n  app: FirebaseApp,\n  appInstance: Object,\n};\n\nconst enhancer: HOC<*, EnhancedComponentProps> = compose(\n  withHandlers({\n\n    handleContinueClick: ({ app, appInstance }) => () => {\n      const user = appInstance.auth().currentUser;\n\n      if (!user) {\n        throw new Error('User is missing');\n      }\n\n      const { refreshToken } = user;\n\n      redirect(app.redirect.url.replace(app.redirect.refreshTokenPlaceholder, refreshToken));\n    },\n\n    handleSignOutClick: ({ appInstance }) => () => {\n      appInstance.auth().signOut();\n    },\n\n  }),\n  withProps(({ appInstance }) => {\n    const user = appInstance.auth().currentUser;\n\n    if (!user) {\n      throw new Error('User is missing');\n    }\n\n    return {\n      email: user.email || '',\n      name: user.displayName || '',\n      pictureUrl: user.photoURL || '',\n    };\n  }),\n);\n\nexport default enhancer;\n","// @flow\n\nexport const getQueryParameters = () => new URLSearchParams(window.location.search);\n\nexport const getQueryParameter = (key: string) => {\n  const params = getQueryParameters();\n\n  if (!params) {\n    return '';\n  }\n\n  return params.get(key) || '';\n};\n\nexport const redirect = (url: string) => {\n  window.location = url;\n};\n","// @flow\n\nimport firebase from 'firebase';\nimport * as React from 'react';\nimport FirebaseUi from 'react-firebaseui/FirebaseAuth';\n\ntype Props = {\n  appInstance: Object,\n  signInOptions: Array<'email' | 'github' | 'google'>,\n};\n\nconst FirebaseAuth = ({ appInstance, signInOptions }: Props) => {\n  const uiConfig = {\n    callbacks: {\n      signInSuccessWithAuthResult: () => false,\n    },\n    signInOptions: signInOptions.map((option) => {\n      switch (option) {\n        case 'email':\n          return firebase.auth.EmailAuthProvider.PROVIDER_ID;\n        case 'github':\n          return firebase.auth.GithubAuthProvider.PROVIDER_ID;\n        case 'google':\n          return firebase.auth.GoogleAuthProvider.PROVIDER_ID;\n        default:\n          return undefined;\n      }\n    }),\n  };\n\n  return <FirebaseUi firebaseAuth={appInstance.auth()} uiConfig={uiConfig} />;\n};\n\nexport default FirebaseAuth;\n","// @flow\n\nimport FirebaseAuth from './FirebaseAuth';\nimport enhance from './FirebaseAuth.enhancer';\n\nexport default enhance(FirebaseAuth);\n","// @flow\n\nimport { lifecycle, type HOC } from 'recompose';\n\nconst enhancer: HOC<*, {}> = lifecycle({\n\n  componentDidCatch(...args) {\n    console.error(...args);\n  },\n\n});\n\nexport default enhancer;\n","// @flow\n\nimport firebase from 'firebase';\nimport * as React from 'react';\n\nimport Authenticated from '../../components/Authenticated';\nimport FirebaseAuth from '../../components/FirebaseAuth';\nimport type { FirebaseApp as FirebaseAppType } from '../../lib/firebaseApp';\n\ntype Props = {\n  app: FirebaseAppType,\n  handleBackClick: () => void,\n  handleDeleteClick: () => void,\n  handleShareClick: () => void,\n  handleUpdateClick: () => void,\n};\n\ntype State = {\n  appInstance: ?Object,\n  isAuthenticated: ?boolean,\n};\n\nexport default class FirebaseApp extends React.Component<Props, State> {\n  state = {\n    appInstance: undefined,\n    isAuthenticated: undefined,\n  };\n\n  componentDidMount() {\n    const { app } = this.props;\n    const appInstance = firebase.initializeApp(app.config);\n\n    try {\n      this.unregisterAuthObserver = appInstance.auth().onAuthStateChanged((user) => {\n        this.setState({ isAuthenticated: Boolean(user) });\n      });\n    } catch (error) {\n      console.error(error);\n    }\n\n    console.log('Firebase app initialized', app.config);\n\n    this.setState({ appInstance });\n  }\n\n  componentWillUnmount() {\n    const { app } = this.props;\n    const { appInstance } = this.state;\n\n    if (this.unregisterAuthObserver) {\n      this.unregisterAuthObserver();\n    }\n\n    if (appInstance) {\n      appInstance.delete()\n        .then(() => console.log('Firebase app deleted', app.config));\n    }\n  }\n\n  unregisterAuthObserver: ?Function;\n\n  renderAuthComponent() {\n    const { app } = this.props;\n    const { appInstance, isAuthenticated } = this.state;\n\n    if (!appInstance) {\n      return <div>Initializing Firebase app...</div>;\n    }\n\n    if (isAuthenticated === false) {\n      return <FirebaseAuth appInstance={appInstance} signInOptions={app.signInOptions} />;\n    }\n\n    if (isAuthenticated === true) {\n      return <Authenticated app={app} appInstance={appInstance} />;\n    }\n\n    return <div>Loading authentication state...</div>;\n  }\n\n  render() {\n    const {\n      app, handleBackClick, handleDeleteClick, handleShareClick, handleUpdateClick,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n\n        <h1>{app.title}</h1>\n\n        <div>\n          <button onClick={handleBackClick} type=\"button\">Back</button>\n          <button onClick={handleUpdateClick} type=\"button\">Update</button>\n          <button onClick={handleShareClick} type=\"button\">Share</button>\n        </div>\n\n        {this.renderAuthComponent()}\n\n        <div>\n          <pre>{JSON.stringify(app, null, 2)}</pre>\n        </div>\n\n        <div>\n          <button onClick={handleDeleteClick} type=\"button\">Delete</button>\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\n\nimport { connect } from 'react-redux';\nimport { compose, withHandlers, type HOC } from 'recompose';\n\nimport { deleteFirebaseApp as deleteFirebaseAppCreator } from '../../actions';\nimport withNavigationHandlers from '../../enhancers/withNavigationHandlers';\nimport { createShareLink } from '../../lib/firebaseApp';\nimport * as R from '../../routes';\n\nconst mapStateToProps = ({ currentFirebaseApp, firebaseApps }) => ({\n  app: firebaseApps[currentFirebaseApp],\n});\n\nconst mapDispatchToProps = { deleteFirebaseApp: deleteFirebaseAppCreator };\n\nconst enhancer: HOC<*, {}> = compose(\n  withNavigationHandlers({\n    handleBackClick: R.HOME,\n    handleUpdateClick: R.UPDATE_FIREBASE_APP,\n  }),\n  connect(mapStateToProps, mapDispatchToProps),\n  withHandlers({\n\n    handleDeleteClick: ({ app, deleteFirebaseApp, handleBackClick }) => () => {\n      handleBackClick();\n      deleteFirebaseApp(app.id);\n    },\n\n    handleShareClick: ({ app }) => () => {\n      prompt('Share this link:', createShareLink(app));\n    },\n\n  }),\n);\n\nexport default enhancer;\n","// @flow\n\nimport FirebaseApp from './FirebaseApp';\nimport enhance from './FirebaseApp.enhancer';\n\nexport default enhance(FirebaseApp);\n","// @flow\n\nimport * as C from '../constants';\n\nexport type FirebaseApp = {\n  config: {\n    apiKey: string,\n    authDomain: string,\n    databaseURL: string,\n    messagingSenderId: string,\n    projectId: string,\n    storageBucket: string,\n  },\n  id: string,\n  redirect: {\n    refreshTokenPlaceholder: string,\n    url: string,\n  },\n  signInOptions: Array<'email' | 'github' | 'google'>,\n  title: string,\n};\n\nexport const createShareLink = (app: FirebaseApp) => {\n  const url = new URL(window.location.href);\n  url.search = '';\n  url.searchParams.append(C.FIREBASE_APP_SHARE_QUERY_PARAMETER, JSON.stringify(app));\n\n  return url.toString();\n};\n\nexport const parseShareLink = (link: string): ?FirebaseApp => {\n  const url = new URL(link);\n  const param = url.searchParams.get(C.FIREBASE_APP_SHARE_QUERY_PARAMETER);\n\n  if (param) {\n    try {\n      return JSON.parse(param);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return undefined;\n};\n","// @flow\n\n// eslint-disable-next-line import/prefer-default-export\nexport const FIREBASE_APP_SHARE_QUERY_PARAMETER = 'firebase-app';\n","// @flow\n\nimport FirebaseAppsListItem from './FirebaseAppsListItem';\n\nexport default FirebaseAppsListItem;\n","// @flow\n\nimport * as React from 'react';\n\nimport type { FirebaseApp } from '../../lib/firebaseApp';\n\ntype Props = {\n  app: FirebaseApp,\n  onSelect: string => void,\n};\n\nconst FirebaseAppsListItem = ({ app, onSelect }: Props) => (\n  <div>\n    {app.title}\n    <button onClick={() => onSelect(app.id)} type=\"button\">Select</button>\n  </div>\n);\n\nexport default FirebaseAppsListItem;\n","// @flow\n\nimport FirebaseAppsList from './FirebaseAppsList';\n\nexport default FirebaseAppsList;\n","// @flow\n\nimport * as React from 'react';\n\nimport FirebaseAppsListItem from '../FirebaseAppsListItem';\nimport type { FirebaseApp } from '../../lib/firebaseApp';\n\ntype Props = {\n  apps: Array<FirebaseApp>,\n  onSelect: string => void,\n};\n\nconst FirebaseAppsList = ({ apps, onSelect }: Props) => (\n  <div>\n    {apps.map((app, index) => (\n      <FirebaseAppsListItem\n        app={app}\n        key={index} // eslint-disable-line react/no-array-index-key\n        onSelect={onSelect}\n      />\n    ))}\n  </div>\n);\n\nexport default FirebaseAppsList;\n","// @flow\n\nimport * as React from 'react';\n\nimport FirebaseAppsList from '../../components/FirebaseAppsList';\nimport type { FirebaseApp } from '../../lib/firebaseApp';\n\ntype Props = {\n  apps: Array<FirebaseApp>,\n  handleCreateFirebaseAppClick: () => void,\n  onSelect: string => void,\n};\n\nconst Home = ({ apps, handleCreateFirebaseAppClick, onSelect }: Props) => (\n  <React.Fragment>\n\n    <h1>Home</h1>\n\n    <div>\n      <button onClick={handleCreateFirebaseAppClick} type=\"button\">Create Firebase app</button>\n    </div>\n\n    <FirebaseAppsList apps={apps} onSelect={onSelect} />\n\n  </React.Fragment>\n);\n\nexport default Home;\n","// @flow\n\nimport { connect } from 'react-redux';\nimport { compose, withHandlers, type HOC } from 'recompose';\n\nimport { selectFirebaseApp as selectFirebaseAppCreator } from '../../actions';\nimport withNavigationHandlers from '../../enhancers/withNavigationHandlers';\nimport * as R from '../../routes';\n\nconst mapStateToProps = ({ firebaseApps }) => ({\n  apps: Object.keys(firebaseApps).map(key => firebaseApps[key]),\n});\n\nconst mapDispatchToProps = { selectFirebaseApp: selectFirebaseAppCreator };\n\nconst enhancer: HOC<*, {}> = compose(\n  withNavigationHandlers({\n    handleCreateFirebaseAppClick: R.CREATE_FIREBASE_APP,\n    handleFirebaseAppNavigate: R.FIREBASE_APP,\n  }),\n  connect(mapStateToProps, mapDispatchToProps),\n  withHandlers({\n\n    onSelect: ({ handleFirebaseAppNavigate, selectFirebaseApp }) => (id) => {\n      selectFirebaseApp(id);\n      handleFirebaseAppNavigate();\n    },\n\n  }),\n);\n\nexport default enhancer;\n","// @flow\n\nimport Home from './Home';\nimport enhance from './Home.enhancer';\n\nexport default enhance(Home);\n","// @flow\n\nimport * as React from 'react';\n\nimport FirebaseAppForm from '../../components/FirebaseAppForm';\nimport type { FirebaseApp } from '../../lib/firebaseApp';\n\ntype Props = {\n  app: FirebaseApp,\n  handleBackClick: () => void,\n  onSubmit: FirebaseApp => void,\n};\n\nconst UpdateFirebaseApp = ({ app, handleBackClick, onSubmit }: Props) => (\n  <React.Fragment>\n\n    <h1>Update Firebase app</h1>\n\n    <div>\n      <button onClick={handleBackClick} type=\"button\">Back</button>\n    </div>\n\n    <FirebaseAppForm buttonTitle=\"Update\" initial={app} onSubmit={onSubmit} />\n\n  </React.Fragment>\n);\n\nexport default UpdateFirebaseApp;\n","// @flow\n\nimport { connect } from 'react-redux';\nimport { compose, withHandlers, type HOC } from 'recompose';\n\nimport { updateFirebaseApp as updateFirebaseAppCreator } from '../../actions';\nimport withNavigationHandlers from '../../enhancers/withNavigationHandlers';\nimport * as R from '../../routes';\n\nconst mapStateToProps = ({ currentFirebaseApp, firebaseApps }) => ({\n  app: firebaseApps[currentFirebaseApp],\n});\n\nconst mapDispatchToProps = { updateFirebaseApp: updateFirebaseAppCreator };\n\nconst enhancer: HOC<*, {}> = compose(\n  withNavigationHandlers({\n    handleBackClick: R.FIREBASE_APP,\n  }),\n  connect(mapStateToProps, mapDispatchToProps),\n  withHandlers({\n\n    onSubmit: ({ app, handleBackClick, updateFirebaseApp }) => (updatedApp) => {\n      updateFirebaseApp(app.id, updatedApp);\n      handleBackClick();\n    },\n\n  }),\n);\n\nexport default enhancer;\n","// @flow\n\nimport UpdateFirebaseApp from './UpdateFirebaseApp';\nimport enhance from './UpdateFirebaseApp.enhancer';\n\nexport default enhance(UpdateFirebaseApp);\n","// @flow\n\nimport * as React from 'react';\n\nimport * as R from '../../routes';\nimport CreateFirebaseApp from '../../views/CreateFirebaseApp';\nimport FirebaseApp from '../../views/FirebaseApp';\nimport Home from '../../views/Home';\nimport UpdateFirebaseApp from '../../views/UpdateFirebaseApp';\n\ntype Props = {\n  route: string,\n};\n\nconst App = ({ route }: Props) => {\n  switch (route) {\n    case R.CREATE_FIREBASE_APP:\n      return <CreateFirebaseApp />;\n\n    case R.FIREBASE_APP:\n      return <FirebaseApp />;\n\n    case R.UPDATE_FIREBASE_APP:\n      return <UpdateFirebaseApp />;\n\n    default:\n      return <Home />;\n  }\n};\n\nexport default App;\n","// @flow\n\nimport { connect } from 'react-redux';\nimport { compose, lifecycle, type HOC } from 'recompose';\n\nimport {\n  createFirebaseApp as createFirebaseAppCreator,\n  navigate as navigateCreator,\n  selectFirebaseApp as selectFirebaseAppCreator,\n} from '../../actions';\nimport * as R from '../../routes';\nimport { parseShareLink } from '../../lib/firebaseApp';\n\nconst mapStateToProps = ({ currentFirebaseApp, firebaseApps, route }) => ({\n  currentFirebaseApp, firebaseApps, route,\n});\n\nconst mapDispatchToProps = {\n  createFirebaseApp: createFirebaseAppCreator,\n  navigate: navigateCreator,\n  selectFirebaseApp: selectFirebaseAppCreator,\n};\n\nconst enhancer: HOC<*, {}> = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  lifecycle({\n\n    componentDidMount() {\n      const {\n        createFirebaseApp, currentFirebaseApp, firebaseApps, navigate, selectFirebaseApp,\n      } = this.props;\n\n      const sharedFirebaseApp = parseShareLink(window.location.href);\n\n      if (sharedFirebaseApp && !firebaseApps[sharedFirebaseApp.id]) {\n        createFirebaseApp(sharedFirebaseApp);\n        selectFirebaseApp(sharedFirebaseApp.id);\n        navigate(R.FIREBASE_APP);\n      } else if (currentFirebaseApp && firebaseApps[currentFirebaseApp]) {\n        navigate(R.FIREBASE_APP);\n      }\n    },\n\n  }),\n);\n\nexport default enhancer;\n","// @flow\n\nimport App from './App';\nimport enhance from './App.enhancer';\n\nexport default enhance(App);\n","// @flow\n\nimport type { Action } from '../actions';\nimport * as T from '../actions/types';\nimport type { FirebaseApp } from '../lib/firebaseApp';\nimport * as R from '../routes';\n\nexport type State = {\n  currentFirebaseApp: string,\n  firebaseApps: { [string]: FirebaseApp },\n  route: string,\n  routeParams: Object,\n};\n\nconst initialState = {\n  currentFirebaseApp: '',\n  firebaseApps: {},\n  route: R.HOME,\n  routeParams: {},\n};\n\nexport const persistedPaths = ['currentFirebaseApp', 'firebaseApps'];\n\nexport default (state: State = initialState, action: Action): State => {\n  switch (action.type) {\n    case T.NAVIGATE:\n      return {\n        ...state,\n        route: action.payload.route,\n        routeParams: action.payload.params ? action.payload.params : {},\n      };\n\n    case T.FIREBASE_APP_CREATED:\n    case T.FIREBASE_APP_UPDATED:\n      return {\n        ...state,\n        firebaseApps: {\n          ...state.firebaseApps,\n          [action.payload.id]: action.payload,\n        },\n      };\n\n    case T.FIREBASE_APP_DELETED: {\n      const { [action.payload]: deleted, ...firebaseApps } = state.firebaseApps;\n\n      return {\n        ...state,\n        currentFirebaseApp: (action.payload === state.currentFirebaseApp\n          ? '' : state.currentFirebaseApp),\n        firebaseApps,\n      };\n    }\n\n    case T.FIREBASE_APP_SELECTED:\n      return {\n        ...state,\n        currentFirebaseApp: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","/* eslint-disable no-console */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => { // eslint-disable-line no-param-reassign\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","// @flow\n\nimport * as React from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './containers/App';\nimport createStore from './lib/createStore';\nimport reducer from './reducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst container = document.getElementById('container');\nconst store = createStore(reducer);\n\nif (!container) {\n  throw new Error('Container is missing');\n}\n\nReactDom.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  container,\n);\n\nserviceWorker.unregister();\n","// @flow\n\nimport {\n  applyMiddleware, compose, createStore, type Reducer, type Store as ReduxStore,\n} from 'redux';\nimport persistState from 'redux-localstorage';\nimport thunk from 'redux-thunk';\n\nimport type { Action } from '../actions';\nimport { persistedPaths, type State } from '../reducer';\n\nexport type Store = ReduxStore<State, Action>;\n\nexport default (reducer: Reducer<State, Action>): Store => {\n  const middleware = [\n    thunk,\n  ];\n\n  const composeEnhancers = (typeof window === 'object'\n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ // eslint-disable-line no-underscore-dangle\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ // eslint-disable-line no-underscore-dangle\n    : compose);\n\n  const enhancer = composeEnhancers(\n    applyMiddleware(...middleware),\n    persistState(persistedPaths),\n  );\n\n  return createStore(reducer, enhancer);\n};\n"],"sourceRoot":""}